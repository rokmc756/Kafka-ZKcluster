#- set_fact:
#    jdk_package_name: jdk-{{ java.version }}-{{ java.platform }}.rpm
#  tags: 
#    - java 
#    - java_installation

- name: Check if java rpm package is installed
  package_facts:
    manager: "auto"

- name: Install Java rpm package
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - java-1.8.0-openjdk
    - java-1.8.0-openjdk-devel
    - java-11-openjdk
    - java-11-openjdk-devel
    - java-17-openjdk
    - java-17-openjdk-devel
    - tar
#  when: "'java-1.8.0' is not in ansible_facts.packages"
#  async: 60
#  poll: 5

- name: Correct java version selected
  alternatives:
    link: /usr/bin/java
    name: java
    path: /usr/lib/jvm/java-1.8.0/bin/java
    priority: -10
    # path: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.352.b08-2.el9_0.x86_64/bin/java
    # path: /usr/lib/jvm/java-11-openjdk-11.0.ea.28-7.el7.x86_64/bin/java
    # path: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.181-7.b13.el7.x86_64/bin/java

- name: Copy Java Home Script
  template: src=java_home.sh dest=/etc/profile.d

- name: Set Java Home Script
  shell: source /etc/profile.d/java_home.sh

- name: Get Java Version
  shell: java -version
  register: javaVersion

- name: Set Java Version Fact
  set_fact:
    java_version: "{{ javaVersion.stdout_lines }}"

- name: debug
  debug: var=java_version

#  stat: path={{ package_download_path }}/{{ jdk_package_name }}
#  register: jdk_package_exists
#  tags:
#    - java 
#    - java_installation

#- name: download jdk package if not downloaded
#  get_url: url={{ java.download_mirror }}/{{ java.version }}-{{ java.build }}/{{ jdk_package_name }} dest={{ package_download_path }} headers={{ java.download_cookies }}
#  when: not jdk_package_exists.stat.exists 
#  tags: 
#    - java 
#    - java_installation

    #- name: install jdk rpm
    #  yum: name={{ package_download_path }}/{{ jdk_package_name }} state=installed
    #  tags: 
    #    - java 
    #    - java_installation

    #- name: delete package downloaded if needed
    #  file: path={{ package_download_path }}/{{ jdk_package_name }} state=absent
    #  when: force_cleanup is defined and force_cleanup == "True"
    #  tags:
    #    - java 
    #    - java_installation

    #- name: symlink to /usr/local
    #  file: state=link src={{ java.installation_path }} dest=/usr/bin/java owner=root group=root
    #  tags: 
    #    - java 
    #    - java_installation

    #- name: make java system alternative
  # priority parameter its supported in Ansible > 2.2
  #  alternatives: name=java path={{ java.installation_path }}/bin/java link=/usr/bin/java
  #  tags: 
  #    - java 
  #    - java_installation
